<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yingjun.ssm.dao.PictureDao">
    <!-- Picture的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Picture_Map" type="com.yingjun.ssm.entity.Picture">
        <id column="id" property="id" />
        <result column="update_time" property="updateTime" />
        <result column="update_user" property="updateUser" />
        <result column="creat_time" property="creatTime" />
        <result column="pic_remark" property="picRemark" />
        <result column="create_user" property="createUser" />
        <result column="url" property="url" />
    </resultMap>

    <!-- 数据库中表名为:t_picture的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_picture_Column">
        t_picture.id as id
        ,t_picture.update_time as update_time
        ,t_picture.update_user as update_user
        ,t_picture.creat_time as creat_time
        ,t_picture.pic_remark as pic_remark
        ,t_picture.create_user as create_user
        ,t_picture.url as url
    </sql>

    <!--获得类名为:Picture对应的数据库表的数据总行数 -->
    <select id="getPictureRowCount" resultType="java.lang.Long">
        select count(id) from t_picture
    </select>
    <!-- 获得类名为:Picture对应数据库中表的数据集合 -->
    <select id="selectPicture" resultMap="result_Picture_Map">
        select 
        <include refid="t_picture_Column" /> 
        from t_picture
    </select> 

    <!-- 获得一个Picture对象,以参数Picture对象中不为空的属性作为条件进行查询-->
    <select id="selectPictureByObj" parameterType="com.yingjun.ssm.entity.Picture" resultMap="result_Picture_Map">
        select 
            <include refid="t_picture_Column" /> 
        from t_picture
        <where>
            <if test="url != null "> and t_picture.url = #{url}</if>
            <if test="createUser != null "> and t_picture.create_user = #{createUser}</if>
            <if test="picRemark != null "> and t_picture.pic_remark = #{picRemark}</if>
            <if test="creatTime != null "> and t_picture.creat_time = #{creatTime}</if>
            <if test="updateUser != null "> and t_picture.update_user = #{updateUser}</if>
            <if test="updateTime != null "> and t_picture.update_time = #{updateTime}</if>
            <if test="id != null "> and t_picture.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Picture的id获得对应数据库中表的数据对象-->
    <select id="selectPictureById" parameterType="java.lang.Integer" resultMap="result_Picture_Map">
        select 
            <include refid="t_picture_Column" /> 
        from t_picture
        where t_picture.id = #{id}
    </select> 

    <!-- 将Picture插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertPicture" parameterType="com.yingjun.ssm.entity.Picture">
        insert into t_picture(id,update_time,update_user,creat_time,pic_remark,create_user,url) 
        values(#{id},#{updateTime},#{updateUser},#{creatTime},#{picRemark},#{createUser},#{url})
    </insert>

    <!-- 将Picture中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyPicture" parameterType="com.yingjun.ssm.entity.Picture">
        insert into t_picture
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="creatTime != null">creat_time,</if>
            <if test="picRemark != null">pic_remark,</if>
            <if test="createUser != null">create_user,</if>
            <if test="url != null">url,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="updateUser != null"> #{updateUser},</if>
            <if test="creatTime != null"> #{creatTime},</if>
            <if test="picRemark != null"> #{picRemark},</if>
            <if test="createUser != null"> #{createUser},</if>
            <if test="url != null"> #{url},</if>
        </trim>
    </insert>

    <!-- 将Picture批量插入到对应数据库的表中-->
    <insert id="insertPictureByBatch" parameterType="ArrayList">
        insert into t_picture(id,update_time,update_user,creat_time,pic_remark,create_user,url) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.updateTime},#{item.updateUser},#{item.creatTime},#{item.picRemark},#{item.createUser},#{item.url})
        </foreach>
    </insert>

    <!-- 通过Picture的id将数据库表中对应的数据删除-->
    <delete id="deletePictureById" parameterType="java.lang.Integer">
        delete from t_picture
        where id = #{id}
    </delete>

    <!-- 通过Picture的id将Picture的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updatePictureById" parameterType="com.yingjun.ssm.entity.Picture">
        update t_picture set
            update_time=#{updateTime}
            ,update_user=#{updateUser}
            ,creat_time=#{creatTime}
            ,pic_remark=#{picRemark}
            ,create_user=#{createUser}
            ,url=#{url}
        where id=#{id}
    </update>

    <!-- 通过Picture的id将Picture中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPictureById" parameterType="com.yingjun.ssm.entity.Picture">
        update t_picture
        <set>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="updateUser != null">
                update_user=#{updateUser},
            </if>
            <if test="creatTime != null">
                creat_time=#{creatTime},
            </if>
            <if test="picRemark != null">
                pic_remark=#{picRemark},
            </if>
            <if test="createUser != null">
                create_user=#{createUser},
            </if>
            <if test="url != null">
                url=#{url},
            </if>
        </set>
        where id=#{id}
    </update>




    <!-- 更新logo图片信息-->
    <update id="updateLogoPicture" parameterType="com.yingjun.ssm.entity.Picture">
        update t_picture
          SET
          url = #{url}
        where id = 1
    </update>
    <!-- 更新banner图片信息-->
    <update id="updateBannerPicture" parameterType="com.yingjun.ssm.entity.Picture">
        update t_picture
        SET
        url = #{url}
        where id = 2
    </update>
</mapper>